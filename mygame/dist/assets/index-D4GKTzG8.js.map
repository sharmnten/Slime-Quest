{"version":3,"file":"index-D4GKTzG8.js","sources":["../../src/main.js"],"sourcesContent":["import kaplay from \"kaplay\";\r\nimport \"kaplay/global\";\r\n\r\nkaplay({\r\n\tbackground: [153, 204, 255],\r\n\tfont:\"pixel\",\r\n\tdebugKey:\"b\",\r\n})\r\n//load sprites\r\nloadSprite(\"sandExclamation\",\"sprites/sand_question.png\")\r\n//load font\r\nloadFont(\"pixel\", \"fonts/PixelOperator8.ttf\");\r\n//load audio\r\nloadSound(\"coin\",\"sounds/coin.wav\");\r\nloadSound(\"music\",\"sounds/time_for_adventure.mp3\")\r\nloadSound(\"jump\",\"sounds/jump.wav\")\r\nloadSound(\"hurt\",\"sounds/hurt.wav\");\r\n//load assets\r\nloadSpriteAtlas(\"sprites/knight.png\", {\r\n    \"hero\": {\r\n        x: 0,\r\n        y: 0,\r\n        width: 256,\r\n        height: 256,\r\n        sliceX: 8,\r\n\t\tsliceY:8,\r\n        anims: {\r\n            idle: { from: 0, to: 3 },\r\n            run: { from: 16, to: 31 },\r\n            hit: 8,\r\n        },\r\n    },\r\n})\r\nloadSpriteAtlas(\"sprites/doors.png\",{\r\n\t\"door\":{\r\n\t\tx:0,\r\n\t\ty:0,\r\n\t\twidth:68,\r\n\t\theight:26,\r\n\t\tsliceX:3,\r\n\t\tsliceY:1,\r\n\t\tanims:{\r\n\t\t\tclosed:0,\r\n\t\t\topen:3,\r\n\t\t}\r\n\t}\r\n})\r\nloadSpriteAtlas(\"sprites/elements.png\",{\r\n\t\"dirtCrate\":{\r\n\t\tx:0,\r\n\t\ty:0,\r\n\t\twidth:48,\r\n\t\theight:32,\r\n\t\tsliceX:3,\r\n\t\tsliceY:2,\r\n\t\tanims:{\r\n\t\t\tnormal:0\r\n\t\t}\r\n\t},\r\n    \"dirtSign\":{\r\n\t\tx:16,\r\n\t\ty:0,\r\n\t\twidth:48,\r\n\t\theight:32,\r\n\t\tsliceX:3,\r\n\t\tsliceY:2,\r\n\t\tanims:{\r\n\t\t\tnormal:1\r\n\t\t}\r\n\t},\r\n\t\"dirtFence\":{\r\n\t\tx:32,\r\n\t\ty:0,\r\n\t\twidth:48,\r\n\t\theight:32,\r\n\t\tsliceX:3,\r\n\t\tsliceY:2,\r\n\t\tanims:{\r\n\t\t\tnormal:2\r\n\t\t}\r\n\t},\r\n\t\"goldCrate\":{\r\n\t\tx:0,\r\n\t\ty:16,\r\n\t\twidth:48,\r\n\t\theight:32,\r\n\t\tsliceX:3,\r\n\t\tsliceY:2,\r\n\t\tanims:{\r\n\t\t\tnormal:3,\r\n\t\t}\r\n\t},\r\n\t\"goldSign\":{\r\n\t  x:16,\r\n      y:16,\r\n\t  width:48,\r\n\t  height:32,\r\n\t  sliceX:3,\r\n\t  sliceY:2,\r\n\t  anims:{\r\n\t\tnormal:4,\r\n\t  }\r\n\t},\r\n\t\"goldFence\":{\r\n\t\tx:32,\r\n\t\ty:16,\r\n\t\twidth:48,\r\n\t\theight:32,\r\n\t\tsliceX:3,\r\n\t\tsliceY:2,\r\n\t\tanims:{\r\n\t\t\tnormal:5\r\n\t\t}\r\n\t}\r\n})\r\nloadSpriteAtlas(\"sprites/slime_purple.png\",{\r\n\t\"slime_purple\": {\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\twidth: 96,\r\n\t\theight: 72,\r\n\t\tsliceX: 4,\r\n\t\tsliceY: 3,\r\n\t\tanims:{\r\n\t\t\tspawn: { from: 0, to: 3},\r\n\t\t\tmove: {from: 4, to: 7},\r\n\t\t\tdie: {from: 8, to: 11}\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n})\r\n\r\nloadSpriteAtlas(\"sprites/slime_green.png\",{\r\n\t\"slime_green\": {\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\twidth: 96,\r\n\t\theight: 72,\r\n\t\tsliceX: 4,\r\n\t\tsliceY: 3,\r\n\t\tanims:{\r\n\t\t\tspawn: { from: 0, to: 3},\r\n\t\t\tmove: {from: 4, to: 7},\r\n\t\t\tdie: {from: 8, to: 11}\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n})\r\nloadSpriteAtlas(\"sprites/coin.png\",{\r\n \"coin\":{\r\n\tx:0,\r\n\ty:0,\r\n\twidth:192,\r\n\theight:16,\r\n\tsliceX:12,\r\n\tsliceY:1,\r\n\tanims:{\r\n\t\tspin:{from: 0, to: 11}\r\n\t}\r\n }\r\n})\r\nloadSpriteAtlas(\"sprites/knight.png\",{\r\n\t\"knight\":{\r\n\t\tx:0,\r\n\t\ty:0,\r\n\t\twidth:256,\r\n\t\theight:256,\r\n\t\tsliceX:8,\r\n\t\tsliceY:8,\r\n\t\tanims:{\r\n\t\t\tidle:{from: 0, to: 3},\r\n\t\t\trun:{from: 16, to: 31},\r\n\t\t\troll:{from: 41, to: 47},\r\n\t\t\thit:{from:48, to: 51},\r\n\t\t\tdie:{from: 56, to: 59},\r\n\t\t}\r\n\t}\r\n})\r\nloadSpriteAtlas(\"sprites/rope_tileset.png\",{\r\n\t\"dirt_rope\":{\r\n\t\tx:0,\r\n\t\ty:0,\r\n\t\twidth:48,\r\n\t\theight:43,\r\n\t\tsliceY:3,\r\n\t\tanims:{\r\n\t\t\tnormal:0,\r\n\t\t}\r\n\t},\r\n\t\"sand_rope\":{\r\n\t\tx:0,\r\n\t\ty:16,\r\n\t\twidth:48,\r\n\t\theight:43,\r\n\t\tsliceY:3,\r\n\t\tanims:{\r\n\t\t\tnormal:1,\r\n\t\t},\r\n\t},\r\n\t\"gold_rope\":{\r\n\t\tx:0,\r\n\t\ty:32,\r\n\t\twidth:48,\r\n\t\theight:43,\r\n\t\tsliceY:3,\r\n\t\tanims:{\r\n\t\t\tnormal:2,\r\n\t\t},\r\n\t},\r\n})\r\nloadSpriteAtlas(\"sprites/tileAtlas.png\", {\r\n  grass: {\r\n    x: 0,\r\n    y: 0,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      grassanims: 0,\r\n    },\r\n  },\r\n  dirtCrack: {\r\n    x: 16,\r\n    y: 0,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      crackanims: 1,\r\n    },\r\n  },\r\n  sandTop: {\r\n    x: 32,\r\n    y: 0,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      sandanims: 2,\r\n    },\r\n  },\r\n  sandCrack: {\r\n    x: 48,\r\n    y: 0,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      sandCrackanims: 3,\r\n    },\r\n  },\r\n  goldTop: {\r\n    x: 64,\r\n    y: 0,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      goldTopanims: 4,\r\n    },\r\n  },\r\n  goldCrack: {\r\n    x: 80,\r\n    y: 0,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      goldCrackanims: 5,\r\n    },\r\n  },\r\n  iceRock: {\r\n    x: 96,\r\n    y: 0,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      iceRockanims: 6,\r\n    },\r\n  },\r\n  snowIce: {\r\n    x: 112,\r\n    y: 0,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      snowIceanims: 7,\r\n    },\r\n  },\r\n  rockCrack: {\r\n    x: 128,\r\n    y: 0,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      rockCrackanims: 8,\r\n    },\r\n  },\r\n  dirt: {\r\n    x: 0,\r\n    y: 16,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      dirtanims: 9,\r\n    },\r\n  },\r\n  dirtCrack2: {\r\n    x: 16,\r\n    y: 16,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      dirtCrack2anims: 10,\r\n    },\r\n  },\r\n  sand: {\r\n    x: 32,\r\n    y: 16,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      samdanims: 11,\r\n    },\r\n  },\r\n  sandCrack2: {\r\n    x: 48,\r\n    y: 16,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      sandCrack2anims: 12,\r\n    },\r\n  },\r\n  goldDirt: {\r\n    x: 64,\r\n    y: 16,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      goldDirtanims: 13,\r\n    },\r\n  },\r\n  goldCrack2: {\r\n    x: 80,\r\n    y: 16,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      goldCrack2anims: 14,\r\n    },\r\n  },\r\n  rock: {\r\n    x: 96,\r\n    y: 16,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      rockanims: 15,\r\n    },\r\n  },\r\n  snowRock: {\r\n    x: 112,\r\n    y: 16,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      snowRockanims: 16,\r\n    },\r\n  },\r\n  rockCrack2: {\r\n    x: 128,\r\n    y: 16,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      dirtanims: 17,\r\n    },\r\n  },\r\n  question: {\r\n    x: 0,\r\n    y: 31,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      questionanims: 18,\r\n    },\r\n  },\r\n  exclamation: {\r\n    x: 16,\r\n    y: 31,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      exclamationanims: 19,\r\n    },\r\n  },\r\n  sandTop2: {\r\n    x: 32,\r\n    y: 31,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      sandTop2anims: 20,\r\n    },\r\n  },\r\n  sandQuestion: {\r\n    x: 48,\r\n    y: 31,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      sandQuestionanims: 21,\r\n    },\r\n  },\r\n  goldQuestion: {\r\n    x: 64,\r\n    y: 31,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      goldQuestionanims: 22,\r\n    },\r\n  },\r\n  goldExclamation: {\r\n    x: 80,\r\n    y: 31,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      goldExclamationanims: 23,\r\n    },\r\n  },\r\n  ice: {\r\n    x: 96,\r\n    y: 31,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      iceanims: 24,\r\n    },\r\n  },\r\n  rockQuestion: {\r\n    x: 112,\r\n    y: 31,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      dirtanims: 25,\r\n    },\r\n  },\r\n  rockExclamation: {\r\n    x: 128,\r\n    y: 31,\r\n    height: 48,\r\n    width: 144,\r\n    sliceX: 9,\r\n    sliceY: 3,\r\n    anims: {\r\n      rockExclamationanims: 26,\r\n    },\r\n  },\r\n});\r\n//patrol behavior for enemies\r\nfunction patrol(speed = 60, dir = 1) {\r\n    return {\r\n        id: \"patrol\",\r\n        require: [\"pos\", \"area\"],\r\n        add() {\r\n            this.on(\"collide\", (obj, col) => {\r\n                if (col.isLeft() || col.isRight()) {\r\n                    dir = -dir;\r\n\t\t\t\t\t\r\n                }\r\n\t\t\t\tif (col.isLeft()){\r\n\t\t\t\t\tthis.flipX = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (col.isRight()){\r\n\t\t\t\t\tthis.flipX= true;\r\n\t\t\t\t}\r\n            });\r\n\t\t\tthis.play(\"move\",{loop: true});\r\n        },\r\n        update() {\r\n            this.move(speed * dir, 0);\r\n\t\t\t\r\n        },\r\n    };\r\n}\r\n\r\nconst SCALE_FACTOR =4;\r\nconst JUMP_HEIGHT = 1000;\r\nconst FALL_DEATH = -24000;\r\n\r\n\r\n\r\n\r\nconst LEVELS = [\r\n    [\r\n        \"    0       \",\r\n        \"   -- z =   \",\r\n        \"       $$   \",\r\n        \" @  <  ===   \",\r\n        \"            \",\r\n        \"- f x > = D\",\r\n        \"============\",\r\n    ],\r\n    [\r\n        \"                          $\",\r\n        \"                          $\",\r\n        \"                          $\",\r\n        \"                          $\",\r\n        \"                          $\",\r\n        \"           $$         =   $\",\r\n        \"  @      ====         =   $\",\r\n        \"                      =   $\",\r\n        \"                      =    \",\r\n        \"       ^^      = >    =   D\",\r\n        \"===========================\",\r\n    ],\r\n    [\r\n        \"     $    $    $    $     $\",\r\n        \"     $    $    $    $     $\",\r\n        \"                           \",\r\n        \"                           \",\r\n        \"                           \",\r\n        \"                           \",\r\n        \"                           \",\r\n        \" ^^^^>^^^^>^^^^>^^^^>^^^^^@\",\r\n        \"===========================\",\r\n    ],\r\n];\r\n\r\n// define what each symbol means in the level graph\r\nconst levelConf = {\r\n    tileWidth: 64,\r\n    tileHeight: 64,\r\n    tiles: {\r\n\t\t\"@\": () => [\r\n\t\t\tsprite(\"knight\"),\r\n\t\t\tbody(),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\tscale(4,4),\r\n\t\t\tarea({ shape: new Polygon([vec2(0,0), vec2(12,0), vec2(12, 15),vec2(0,15) ]),offset:vec2(-5,-3) }),\r\n            \"player\",\r\n        ],\r\n        \"=\": () => [\r\n            sprite(\"grass\"),\r\n            area(),\r\n            body({ isStatic: true }),\r\n            //offscreen({ hide: true }),\r\n\t\t\tscale(SCALE_FACTOR,SCALE_FACTOR),\r\n\t\t\tanchor(\"center\"),\r\n\r\n        ],\r\n        \"-\": () => [\r\n            sprite(\"dirt\"),\r\n            area(),\r\n            body({ isStatic: true }),\r\n            offscreen({ hide: true }),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\tscale(SCALE_FACTOR,SCALE_FACTOR),\r\n\t\t\t\r\n        ],\r\n        \"$\": () => [\r\n            sprite(\"coin\"),\r\n            area(),\r\n            pos(0, -9),\r\n\t\t\tanchor(\"center\"),\r\n            offscreen({ hide: true }),\r\n            \"coin\",\r\n\t\t\tscale(SCALE_FACTOR,SCALE_FACTOR),\r\n        ],\r\n\r\n        \">\": () => [\r\n            sprite(\"slime_green\"),\r\n            area({shape: new Polygon([vec2(5,7), vec2(5,-7),vec2(-5,-7),vec2(-5,7),]),offset:vec2(0,5) }),\r\n\t\t\tanchor(\"center\"),\r\n            body(),\r\n            patrol(),\r\n\t\t\t\r\n            offscreen({ hide: true }),\r\n            \"enemy\",\r\n\t\t\tscale(SCALE_FACTOR,SCALE_FACTOR),\r\n        ],\r\n\t\t\"<\": () => [\r\n            sprite(\"slime_purple\"),\r\n            area({shape: new Polygon([vec2(5,7), vec2(5,-7),vec2(-5,-7),vec2(-5,7),]),offset:vec2(0,5) }),\r\n\t\t\tanchor(\"center\"),\r\n            body(),\r\n            patrol(),\r\n            offscreen({ hide: true }),\r\n            \"enemy\",\r\n\t\t\tscale(SCALE_FACTOR,SCALE_FACTOR),\r\n        ],\r\n\t\t\"z\":()=>[\r\n\t\t\tsprite(\"sand_rope\"),\r\n\t\t\tscale(SCALE_FACTOR,SCALE_FACTOR),\r\n\t\t\tarea({scale:0.9}),\r\n            body({ isStatic: true }),\r\n            offscreen({ hide: true }),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\t\"rope\",\r\n\t\t],\r\n\t\t\"x\":()=>[\r\n\t\t\tsprite(\"dirtCrate\"),\r\n\t\t\tscale(SCALE_FACTOR,SCALE_FACTOR),\r\n\t\t\tarea(),\r\n\t\t\tbody(),\r\n\t\t\toffscreen({hide:true}),\r\n\t\t\tanchor(\"center\"),\r\n\t\t],\r\n\t\t\"f\":()=>[\r\n          sprite(\"dirtFence\"),\r\n\t\t  scale(SCALE_FACTOR,SCALE_FACTOR),\r\n\t\t  area(),\r\n      z(-5),\r\n\t\t  //body({isStatic:true}),\r\n\t\t  offscreen({hide:true}),\r\n\t\t  anchor(\"center\"),\r\n\t\t],\r\n\t\t\"D\":()=>[\r\n          sprite(\"door\"),\r\n\t\t  scale(SCALE_FACTOR,SCALE_FACTOR),\r\n\t\t  area(),\r\n\t\t  //body({isStatic:true}),\r\n\t\t  offscreen({hide:true}),\r\n\t\t  anchor(\"center\"),\r\n\t\t  pos(vec2(0,-19)),\r\n\t\t  z(0),\r\n\t\t  \"door\",\r\n\t\t],\r\n    },\r\n};\r\n\r\nscene(\"game\", ({ levelId, coins } = { levelId: 0, coins: 0 }) => {\r\n\tconst audio = play(\"music\", {\r\n\t\tvolume: 1,\r\n\t\tloop: true\r\n\t  })\r\n\t//gravity\r\n\tsetGravity(2400)\r\n\t//music\r\n    // add level to scene\r\n    const level = addLevel(LEVELS[levelId ?? 0], levelConf);\r\n\tconst player = level.get(\"player\")[0];\r\n    player.play(\"idle\");\r\n\tplayer.onGround(() => {\r\n\t\tif (!isKeyDown(\"left\") && !isKeyDown(\"right\")) {\r\n\t\t\tplayer.play(\"idle\");\r\n\t\t} else {\r\n\t\t\tplayer.play(\"run\");\r\n\t\t}\r\n\t});\r\n\r\n\tonKeyPress(\"up\", () => {\r\n\t\tif (player.isGrounded()) {\r\n\t\t\tplayer.jump(JUMP_HEIGHT);\r\n\t\t\tplayer.play(\"roll\");\r\n\t\t}\r\n\t});\r\n\tonKeyDown(\"left\", () => {\r\n\t\tplayer.move(-200, 0);\r\n\t\tplayer.flipX = true;\r\n\t\t// .play() will reset to the first frame of the anim, so we want to make sure it only runs when the current animation is not \"run\"\r\n\t\tif (player.isGrounded() && player.curAnim() !== \"run\") {\r\n\t\t\tplayer.play(\"run\");\r\n\t\t}\r\n\t});\r\n\t\r\n\tonKeyDown(\"right\", () => {\r\n\t\tplayer.move(200, 0);\r\n\t\tplayer.flipX = false;\r\n\t\tif (player.isGrounded() && player.curAnim() !== \"run\") {\r\n\t\t\tplayer.play(\"run\");\r\n\t\t}\r\n\t});\r\n  onKeyPress(\"r\",()=>{\r\n    go(\"game\",{\r\n      levelId:levelId,\r\n      coins:0,\r\n    });\r\n  });\r\n\r\n\t\r\n\t\tonKeyRelease([\"left\", \"right\"], () => {\r\n\t\t\t// Only reset to \"idle\" if player is not holding any of these keys\r\n\t\t\tif (player.isGrounded() && !isKeyDown(\"left\") && !isKeyDown(\"right\")) {\r\n\t\t\t\tplayer.play(\"idle\");\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\r\n    onKeyPress(\"left\",()=>{\r\n     player.play(\"run\",{loop:true});\r\n\t player.flipX = true;\r\n\t\r\n\t});\r\n\t\r\n\tonKeyDown(\"left\", () => {\r\n      player.move(-200,0)\r\n\t});\r\n\tonKeyRelease(\"left\",()=>{\r\n      player.play(\"idle\",{loop: true})\r\n\t});\r\n//right movement\r\n\tonKeyPress(\"right\",()=>{\r\n     player.play(\"run\",{loop:true});\r\n\t player.flipX = false;\r\n\t});\r\n\t\r\n\tonKeyDown(\"right\", () => {\r\n      player.move(200,0)\r\n\t});\r\n\tonKeyRelease(\"right\",()=>{\r\n      player.play(\"idle\",{loop: true})\r\n\t});\r\n\t/*onKeyPress(\"up\", ()=>{\r\n\t\tif(player.grounded)\r\n\t\tplayer.play(\"roll\")\r\n\t\tplayer.jump(JUMP_HEIGHT*2)\r\n\t})*/\r\n\t\t\r\n    player.onUpdate(() => {\r\n        // center camera to player\r\n        setCamPos(player.pos.x, player.pos.y);\r\n        // check fall death\r\n        if (player.pos.y >= FALL_DEATH) {\r\n            //player.destroy();\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n\t//collisions\r\nplayer.onCollide(\"door\",(e)=>{\r\n  e.play(\"open\"),\r\n  player.play(\"roll\"),\r\n  player.onAnimEnd((anim) => {\r\n\tif (anim === \"roll\") {\r\n\t\tdestroy(player)\r\n\t\tif (levelId + 1 < LEVELS.length) {\r\n            go(\"game\", {\r\n                levelId: levelId + 1,\r\n                coins: coins,\r\n            });\r\n        } else {\r\n\t\t\t\r\n            //go(\"win\");\r\n        }\r\n\t}\r\n});\r\n});\r\nplayer.onCollide(\"enemy\", (e, col) => {\r\n\t// if it's not from the top, die\r\n\tif (!col.isBottom()) {\r\n\t\tdestroy(player);\r\n\t\tplay(\"hurt\")\r\n\t\tshake(200)\r\n\t}\r\n\telse{\r\n\t\tplayer.jump(JUMP_HEIGHT*1.5);\r\n\t\te.play(\"die\")\r\n\t\tcoins += 1;\r\n\t\tcoinsLabel.text = \"Score: \"+coins;\r\n\t\tshake(10)\r\n\t\tplayer.play(\"roll\")\r\n\t\tplay(\"hurt\")\r\n\t\te.onAnimEnd((anim) => {\r\n\t\t\tif (anim === \"die\") {\r\n\t\t\t\tdestroy(e)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n\r\nplayer.onCollide(\"coin\", (c) => {\r\n\tdestroy(c);\r\n\tplay(\"coin\");\r\n\tcoins += 1;\r\n\tcoinsLabel.text = \"Score: \"+coins;\r\n\t\r\n\t\r\n});\r\n\r\nplayer.onBeforePhysicsResolve((collision) => {\r\n\tif (collision.target.is([\"rope\"]) && player.isJumping()) {\r\n\t\tcollision.preventResolution();\r\n\t}\r\n});\r\n\r\n\r\n//ui\r\nconst coinsLabel = add([\r\n\ttext(\"Score: \"+coins),\r\n\tpos(24, 24),\r\n\tfixed(),\r\n\t\r\n]);\r\n//end game\r\n});\r\n\r\n//start game\r\ngo(\"game\");\r\n"],"names":["kaplay","patrol","speed","dir","obj","col","SCALE_FACTOR","JUMP_HEIGHT","FALL_DEATH","LEVELS","levelConf","levelId","coins","player","e","anim","coinsLabel","c","collision"],"mappings":"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"}